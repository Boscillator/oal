name: Build and Test

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ${{ matrix.os }}

    strategy:
      # Set fail-fast to false to ensure that feedback is delivered for all matrix combinations. Consider changing this to true when your workflow is stable.
      fail-fast: false
      matrix:
        os: [ubuntu-latest]
        build_type: [Release]
        c_compiler: [gcc, clang, cl]
        include:
          #- os: windows-latest
          #  c_compiler: cl
          #  cpp_compiler: cl
          - os: ubuntu-latest
            c_compiler: gcc
            cpp_compiler: g++
          - os: ubuntu-latest
            c_compiler: clang
            cpp_compiler: clang++
        exclude:
          #- os: windows-latest
          #  c_compiler: gcc
          #- os: windows-latest
          #  c_compiler: clang
          - os: ubuntu-latest
            c_compiler: cl

    steps:
    - uses: actions/checkout@v4
    - name: Install dependencies
      run: |
        sudo apt update
        sudo apt install pybind11-dev libeigen3-dev catch2
    - name: CMake Configure
      # Configure CMake in a 'build' subdirectory. `CMAKE_BUILD_TYPE` is only required if you are using a single-configuration generator such as make.
      # See https://cmake.org/cmake/help/latest/variable/CMAKE_BUILD_TYPE.html?highlight=cmake_build_type
      run: >
        cmake --preset development
        -DCMAKE_CXX_COMPILER=${{ matrix.cpp_compiler }}
        -DCMAKE_C_COMPILER=${{ matrix.c_compiler }}
        -DCMAKE_BUILD_TYPE=${{ matrix.build_type }}
    - name: CMake Build
      run: >
        cmake --build --preset development
    - name: CMake Test
      run: >
        ctest --preset development
  build-python:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - uses: astral-sh/setup-uv@v5
    - name: Install C++ Dependencies
      run: |
        sudo apt update
        sudo apt install pybind11-dev libeigen3-dev
    - name: Setup python
      run: uv python install
    - name: Build
      run: uv build
    - name: Pytest
      run: uv run pytest
    - name: Doctest
      run: cd docs && make doctest
